{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","color","backgroundColor","_useState4","myStyle","setMyState","react_default","a","createElement","style","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","Navbar","props","href","title","aria-label","react_router_dom","to","aria-current","placeholder","TextForm","heading","value","onChange","event","console","log","target","rows","toUpperCase","defaultProps","App","Fragment","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0432bea6.chunk.js","sourcesContent":["import React, { useState } from \"react\"; \r\n\r\nexport default function About() {\r\n\r\n    const [text, setText] = useState(\"Dark\")\r\n\r\n    const handleClick = () => {\r\n        if(text === \"Dark\"){\r\n            setText(\"Light\")\r\n            setMyState({\r\n                color: \"white\",\r\n                backgroundColor: \"black\"\r\n            })\r\n        } else{\r\n            setText(\"Dark\")\r\n            setMyState({\r\n                color: \"black\",\r\n                backgroundColor: \"white\"\r\n            })\r\n        }\r\n    }\r\n\r\n    const [myStyle, setMyState]=useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n  return (\r\n    <div style={myStyle}>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-primary my-3\" onClick={handleClick}>Enable {text} mode</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\" href=\"/\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: propTypes.string };\r\n\r\nNavbar.defaultProps = {title: \"TextUtils\"}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleClick = () => {\r\n        console.log(\"clicked\")\r\n        setText(text.toUpperCase())\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        console.log(\"clicked\");\r\n        setText(event.target.value);\r\n    }\r\n  const [text, setText] = useState(\"Enter text here\");\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3\">\r\n        <h1>{props.heading}</h1>\r\n        <textarea className=\"form-control\" value={text} onChange={handleChange} id=\"myBox\" rows=\"10\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleClick}>Convert to Uppercase</button>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\n\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <div className=\"container\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About />} />\n\n            <Route\n              exact\n              path=\"/\"\n              element={<TextForm heading=\"Write a letter to your mom\" />}\n            />\n          </Routes>\n\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}